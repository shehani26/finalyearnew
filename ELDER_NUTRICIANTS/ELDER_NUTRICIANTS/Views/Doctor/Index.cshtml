@model IEnumerable<ELDER_NUTRICIANTS.Models.DOCTOR>

@{
    ViewBag.Title = "Index";
}

<style>
    .btn-group .btn {
        transition: all 0.3s ease;
    }

        .btn-group .btn:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    /* Enhanced table styling */
    .table-responsive {
        overflow-x: auto;
    }

    .caregiver-row td {
        vertical-align: middle;
    }

    .avatar {
        object-fit: cover;
    }

    /* Improved pagination styling */
    .pagination {
        justify-content: flex-end;
    }

    .page-item.active .page-link {
        background-color: #6366f1;
        border-color: #6366f1;
    }

    .page-link {
        color: #6366f1;
    }

    /* Search box enhancements */
    .input-group-outline {
        transition: all 0.3s ease;
        border-radius: 8px;
    }

        .input-group-outline:focus-within {
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
        }


    .modal-content {
        transition: transform 0.3s ease-in-out;
    }

    .modal.fade .modal-dialog {
        transform: translateY(-20px);
        opacity: 0;
    }

    .modal.show .modal-dialog {
        transform: translateY(0);
        opacity: 1;
    }
</style>

<div class="container-fluid py-2">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card my-4">
                <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
                    <div class="bg-gradient-primary shadow-dark border-radius-lg pt-4 pb-3 d-flex justify-content-between align-items-center">
                        <h6 class="text-white text-capitalize ps-3 mb-0">Doctors</h6>
                        <div class="d-flex align-items-center me-3">
                            <a href="@Url.Action("Create", "Doctor")" class="btn btn-success btn-sm ms-auto">
                                <i class="material-symbols-rounded me-1">add</i> New Doctor
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body px-0 pb-2">
                    <div class="d-flex justify-content-between align-items-center px-3 mb-3">
                        <div class="input-group input-group-outline bg-white shadow-sm rounded w-50">
                            <label class="form-label">Search doctor...</label>
                            <input type="text" id="searchInput" class="form-control">
                            <span class="input-group-text"><i class="material-symbols-rounded">search</i></span>
                        </div>
                        <div class="d-flex align-items-center">
                            <label class="me-2 text-sm">Show entries:</label>
                            <select id="entriesPerPage" class="form-select form-select-sm w-auto">
                                <option value="5">5</option>
                                <option value="10" selected>10</option>
                                <option value="25">25</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                            </select>
                        </div>
                    </div>
                    <div class="table-responsive p-0">
                        <table class="table align-items-center mb-0" id="caregiversTable">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Doctor</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Licence No</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Registered Hospital</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Status</th>
                                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Date</th>
                                    <th class="text-secondary opacity-7 text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr class="caregiver-row">
                                        <td>
                                            <div class="d-flex px-2 py-1">
                                                <div>
                                                    <img src="@Url.Content(item.PROFILE_IMAGE ?? "~/assets/img/default-avatar.png")" class="avatar avatar-sm me-3 border-radius-lg" alt="user1">
                                                </div>
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@item.D_CODE</h6>
                                                    <h5 class="mb-0 text-sm">@item.FULL_NAME</h5>
                                                    <p class="text-xs text-secondary mb-0">@item.EMAIL</p>
                                                    <p class="text-xs text-secondary mb-0">@item.CONTACT_NO</p>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <p class="text-xs font-weight-bold mb-0">@item.MEDICAL_LICENSE_NO</p>
                                        </td>
                                        <td>
                                            <p class="text-xs text-secondary mb-0">@item.REGISTERED_HOSPITAL</p>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            @if (item.STATUS == 0)
                                            {
                                                <span class="badge badge-sm bg-gradient-success">Active</span>
                                            }
                                            else if (item.STATUS == 1)
                                            {
                                                <span class="badge badge-sm bg-gradient-secondary">Inactive</span>
                                            }
                                        </td>
                                        <td class="align-middle text-center">
                                            <span class="text-secondary text-xs font-weight-bold">@Convert.ToDateTime(item.CREATED_DATE).ToString("dd-MM-yyyy")</span>
                                        </td>
                                        <td class="align-middle text-center">
                                            <div class="btn-group" role="group" aria-label="Caregiver Actions">

                                                @if (item.STATUS == 0)
                                                {<!-- Edit Button -->
                                                    <a href="@Url.Action("CEdit", "Doctor", new { Cid = item.ID })"
                                                       class="btn btn-sm btn-outline-primary rounded-pill shadow-sm mx-1"
                                                       data-bs-toggle="tooltip" data-bs-placement="top" title="Edit Doctor">
                                                        <i class="material-symbols-rounded me-1">edit</i> Edit
                                                    </a>

                                                    <!-- Delete Button -->
                                                    <a href="javascript:;" onclick="confirmDelete('@item.ID')"
                                                       class="btn btn-sm btn-outline-danger rounded-pill shadow-sm mx-1"
                                                       data-bs-toggle="tooltip" data-bs-placement="top" title="Delete Record">
                                                        <i class="material-symbols-rounded me-1">delete</i> Delete
                                                    </a>
                                                }
                                                </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- No results message -->
                    <div id="noResults" class="text-center p-4 d-none">
                        <div class="text-center">
                            <i class="material-symbols-rounded text-secondary" style="font-size: 48px;">search_off</i>
                            <p class="text-secondary mt-2">No doctors found matching your search criteria.</p>
                            <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-primary mt-2">
                                <i class="material-symbols-rounded me-1">refresh</i> Reset Search
                            </a>
                        </div>
                    </div>

                    <!-- Pagination -->
                    <div class="d-flex justify-content-between align-items-center p-3">
                        <div class="text-sm text-secondary">
                            Showing <span id="startEntry">1</span> to <span id="endEntry">10</span> of <span id="totalEntries">@Model.Count()</span> entries
                        </div>
                        <ul class="pagination pagination-primary m-0">
                            <li class="page-item disabled">
                                <a class="page-link" href="javascript:;" id="prevPage" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            <li class="page-item active"><a class="page-link" href="javascript:;">1</a></li>
                            <!-- Pagination links will be dynamically inserted here -->
                            <li class="page-item">
                                <a class="page-link" href="javascript:;" id="nextPage" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content shadow-lg rounded-4 border-0">
            <div class="modal-header bg-gradient text-white" style="background: linear-gradient(135deg, #e53935, #d32f2f);">
                <h5 class="modal-title fw-bold" id="deleteConfirmModalLabel">
                    <i class="material-symbols-rounded align-middle me-1">warning</i> Confirm Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body text-center">
                <p class="fs-6 mb-1 text-dark">Are you absolutely sure you want to delete this doctor?</p>
                <p class="text-muted small">This action cannot be undone.</p>
                <i class="material-symbols-rounded text-danger" style="font-size: 36px;">delete_forever</i>
            </div>

            <div class="modal-footer d-flex justify-content-between px-4">
                <button type="button" class="btn btn-sm btn-outline-secondary rounded-pill" data-bs-dismiss="modal">
                    <i class="material-symbols-rounded me-1">close</i> Cancel
                </button>
                <a href="#" id="confirmDeleteBtn" class="btn btn-sm btn-danger rounded-pill">
                    <i class="material-symbols-rounded me-1">delete</i> Yes, Delete
                </a>
            </div>
        </div>
    </div>
</div>


<!-- JavaScript Libraries -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Initialize tooltips
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.forEach(function (tooltipTriggerEl) {
            new bootstrap.Tooltip(tooltipTriggerEl);
        });

        // Enhanced Pagination System
        let currentPage = 1;
        let rowsPerPage = parseInt(document.getElementById('entriesPerPage').value);
        const allRows = Array.from(document.querySelectorAll('.caregiver-row'));
        let filteredRows = [...allRows];

        // Initialize pagination
        updatePagination();

        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function() {
            currentPage = 1;
            const searchText = this.value.toLowerCase();
            filteredRows = allRows.filter(row => {
                return row.textContent.toLowerCase().includes(searchText);
            });
            updatePagination();
        });

        // Entries per page change
        document.getElementById('entriesPerPage').addEventListener('change', function() {
            rowsPerPage = parseInt(this.value);
            currentPage = 1;
            updatePagination();
        });

        // Main pagination function
        function updatePagination() {
            const totalRows = filteredRows.length;
            const totalPages = Math.ceil(totalRows / rowsPerPage);

            // Hide all rows first
            allRows.forEach(row => row.style.display = 'none');

            // Show rows for current page
            const startIndex = (currentPage - 1) * rowsPerPage;
            const endIndex = Math.min(startIndex + rowsPerPage, totalRows);

            for (let i = startIndex; i < endIndex; i++) {
                filteredRows[i].style.display = '';
            }

            // Update entry info
            document.getElementById('startEntry').textContent = totalRows > 0 ? startIndex + 1 : 0;
            document.getElementById('endEntry').textContent = endIndex;
            document.getElementById('totalEntries').textContent = totalRows;

            // Update pagination controls
            updatePaginationControls(totalPages);

            // Show/hide no results message
            document.getElementById('noResults').classList.toggle('d-none', totalRows > 0);
        }

        // Update pagination controls
        function updatePaginationControls(totalPages) {
            const paginationContainer = document.querySelector('.pagination');
            let paginationHTML = '';

            // Previous button
            paginationHTML += `
                <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                    <a class="page-link" href="javascript:;" onclick="goToPage(${currentPage - 1})" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            `;

            // Page numbers - show max 5 pages at a time
            const maxVisiblePages = 5;
            let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
            let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

            // Adjust if we're at the beginning or end
            if (endPage - startPage + 1 < maxVisiblePages) {
                startPage = Math.max(1, endPage - maxVisiblePages + 1);
            }

            // Show first page and ellipsis if needed
            if (startPage > 1) {
                paginationHTML += `
                    <li class="page-item">
                        <a class="page-link" href="javascript:;" onclick="goToPage(1)">1</a>
                    </li>
                    ${startPage > 2 ? '<li class="page-item disabled"><span class="page-link">...</span></li>' : ''}
                `;
            }

            // Visible page numbers
            for (let i = startPage; i <= endPage; i++) {
                paginationHTML += `
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="javascript:;" onclick="goToPage(${i})">${i}</a>
                    </li>
                `;
            }

            // Show last page and ellipsis if needed
            if (endPage < totalPages) {
                paginationHTML += `
                    ${endPage < totalPages - 1 ? '<li class="page-item disabled"><span class="page-link">...</span></li>' : ''}
                    <li class="page-item">
                        <a class="page-link" href="javascript:;" onclick="goToPage(${totalPages})">${totalPages}</a>
                    </li>
                `;
            }

            // Next button
            paginationHTML += `
                <li class="page-item ${currentPage === totalPages || totalPages === 0 ? 'disabled' : ''}">
                    <a class="page-link" href="javascript:;" onclick="goToPage(${currentPage + 1})" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            `;

            paginationContainer.innerHTML = paginationHTML;
        }

        // Global function for page navigation
        window.goToPage = function(page) {
            const totalPages = Math.ceil(filteredRows.length / rowsPerPage);
            if (page >= 1 && page <= totalPages) {
                currentPage = page;
                updatePagination();

                // Smooth scroll to top of table
                document.querySelector('.table-responsive').scrollIntoView({
                    behavior: 'smooth'
                });
            }
        };

        // Delete confirmation
       window.confirmDelete = function (id) {
    const deleteUrl = '@Url.Action("Delete", "Doctor")'.replace(/\/$/, '') + '/' + id;
    document.getElementById('confirmDeleteBtn').href = deleteUrl;

    const modal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
    modal.show();
};


        // Toast notifications
        toastr.options = {
            closeButton: true,
            progressBar: true,
            positionClass: "toast-top-right",
            timeOut: "5000",
            extendedTimeOut: "2000",
            preventDuplicates: true
        };

        const notifications = [
            { type: 'success', message: @Html.Raw(Json.Encode(TempData["Alert"])), title: "Success" },
            { type: 'error', message: @Html.Raw(Json.Encode(TempData["Alert1"])), title: "Error" },
            { type: 'info', message: @Html.Raw(Json.Encode(TempData["InfoAlert"])), title: "Information" },
            { type: 'warning', message: @Html.Raw(Json.Encode(TempData["WarningAlert"])), title: "Warning" }
        ];

        notifications.forEach(notification => {
            if (notification.message && notification.message !== "null" && notification.message !== "") {
                toastr[notification.type](notification.message, notification.title);
            }
        });
    });
</script>